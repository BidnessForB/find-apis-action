name: Simple API Change Detection

on:
  workflow_dispatch:
 # push:
 #   branches: [ main ]
 # pull_request:
 #   branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    # Using the action with all defaults
    - name: Find API changes
      id: api-changes
      uses: ./
    
    - name: Show results
      run: |
        if [ "${{ steps.api-changes.outputs.has-changes }}" == "true" ]; then
          echo "API changes detected!"
          echo '${{ steps.api-changes.outputs.api-changes }}' | jq '.'
        else
          echo "No API changes detected"
        fi
    
    - name: Install Postman CLI
      if: steps.api-changes.outputs.has-changes == 'true'
      run: |
        
        curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
        echo "$HOME/.postman/bin" >> $GITHUB_PATH
        postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
    
    - name: Lint changed APIs
      if: steps.api-changes.outputs.has-changes == 'true'
      run: |
        echo "Linting changed APIs..."
        echo '${{ steps.api-changes.outputs.api-changes }}' | jq -c '.[]' | while read api; do
          apiId=$(echo "$api" | jq -r '.apiId')
          integrationId=$(echo "$api" | jq -r '.integrationId')
          
          echo "Linting API: $apiId"
          
          if [ "$integrationId" != "null" ] && [ -n "$integrationId" ]; then
            echo "  Running: postman api lint $apiId --integration-id $integrationId"
            postman api lint "$apiId" --integration-id "$integrationId"
          else
            echo "  Running: postman api lint $apiId"
            postman api lint "$apiId"
          fi
        done
